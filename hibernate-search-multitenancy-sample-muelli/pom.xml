<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- 
		
		Obacht!
		
		Mit Spring 3.1.x und Spring 3.2.x habe ich genau dieses Problem hier:
		
		https://stackoverflow.com/questions/75949374/unable-to-implement-multi-tenancy-using-hibernate-partitioned-discriminator-da
		
		Mit Spring 3.0.5 ff. klappt das noch
		
		Ich habe keine Ahnung ob es dazu einen Bug gibt, muss aber am Hibernate 6.2.x liegen
		siehe auch https://hibernate.atlassian.net/browse/HHH-16830#icft=HHH-16830
		
		HSEARCH Multi-Tenancy hier: https://discourse.hibernate.org/t/problem-using-multitenancy-discriminator-with-hibernate-search/8296

		Aktuelle Lösung: Spring 3.1.5 mit Hibernate 6.1.7.Final (siehe properties). Also ein aktuelles Spring und ein etwas älteres Hibernate. 
		Bis die das gefixt haben 
		
		-->
		
		<version>3.1.5</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.cmuellerke</groupId>
	<artifactId>poc-search-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hsearch-multitenant-poc</name>
	<description>POC HSEARCH 7.0</description>
	<properties>
		<java.version>17</java.version>
		<hibernate.version>6.1.7.Final</hibernate.version>
	</properties>
	<developers>
		<developer>
			<id>cm</id>
			<name>Christian Müllerke</name>
			<email>extern at cmuellerke.de</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!--
		
		noch geht das nicht, weil wir da wahrscheinlich auch die hibernate version hochziehen müssten
		 
		<dependency>
		    <groupId>org.hibernate.search</groupId>
		    <artifactId>hibernate-search-mapper-orm</artifactId>
		    <version>7.0.0.CR1</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- <scope>test</scope> -->
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper.extensions</groupId>
			<artifactId>modelmapper-spring</artifactId>
			<version>3.0.0</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>true</useSystemClassLoader>
					<useFile>false</useFile>
					<includes>
						<include>**/*Tests.java</include>
						<include>**/*Test.java</include>
					</includes>
					<systemPropertyVariables>
						<es.set.netty.runtime.available.processors>false</es.set.netty.runtime.available.processors>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
	    <repository> 
	        <id>repository.spring.milestone</id> 
	        <name>Spring Milestone Repository</name> 
	        <url>https://repo.spring.io/milestone</url> 
	    </repository>
	</repositories>
	
	<pluginRepositories>
	    <pluginRepository>
	        <id>spring-snapshots</id>
	        <url>https://repo.spring.io/snapshot</url>
	    </pluginRepository>
	    <pluginRepository>
	        <id>spring-milestones</id>
	        <url>https://repo.spring.io/milestone</url>
	    </pluginRepository>
	</pluginRepositories>	
</project>
